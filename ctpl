#!/usr/bin/env node

const ctpl = require('commander'),
    parser = require('./utils/parser'),
    core = require('./utils/core')

ctpl
  .version('v0.1.4', '-v, --version')
  .option('-n, --name [value]', 'AWS CloudFormation Stack Name')
  .option('-c, --components [value]', 'AWS CloudFormation Components', parser.componentReader, [])
  .option('-p, --parameters [value]', 'Parameters File (yaml|yml)', parser.parameterReader, [])
  .option('-k, --keyPairs [value]', 'Key=Value Parameter', parser.keyReader, [])
  .option('-t, --template <file>', 'template file')
  .option('-o, --output <file>', 'output file')

ctpl
  .command('compile')
  .description('Compile AWS CloudFormation Component template.')
  .action(() => {
    core.cfnCompile(ctpl)
  })

ctpl
  .command('validate')
  .description('Validate AWS CloudFormation Component template.')
  .action(() => {
    core.cfnValidate(ctpl)
  })

ctpl
  .command('apply')
  .description('Apply AWS CloudFormation Component template.')
  .action(() => {
    core.cfnApply(ctpl)
  })

ctpl
  .command('delete')
  .description('Delete AWS CloudFormation Component stack.')
  .action(() => {
    core.cfnDelete(ctpl)
  })

ctpl
  .command('render')
  .description('Render Template.')
  .action(() => {
    core.tplRender(ctpl)
  })


ctpl
  .parse(process.argv)
